- const getInputName = (entity, property) => `${_.lowerFirst(entity.constructor.name)}[${property}]`
- const getTKey = (entity, property) => `views.${_.lowerFirst(entity.constructor.name)}.${property}`

mixin formFor(entity = null)
  form&attributes(attributes)
    block

mixin input(entity, propertyName, errors = [], defaultValue = '')
  - error = _.get(errors, propertyName)
  .form-group.mb-3(class=(errors[propertyName] && 'has-danger'))
    label(for=propertyName).form-label= t(getTKey(entity, propertyName))
    input(
      name=getInputName(entity, propertyName)
      class='form-control'
      id=propertyName
      value=_.get(entity, propertyName, defaultValue)
    )&attributes(attributes)
    if error
      .form-control-feedback.text-danger= error.map(({ message }) => message).join('. ')

mixin textarea(entity, propertyName, errors = [])
  - error = _.get(errors, propertyName)
  .form-group.mb-3(class=(errors[propertyName] && 'has-danger'))
    label(for=propertyName).form-label= t(getTKey(entity, propertyName))
    textarea(
      name=getInputName(entity, propertyName)
      class='form-control'
      id=propertyName
    )&attributes(attributes)= _.get(entity, propertyName, '')
    if error
      .form-control-feedback.text-danger= error.map(({ message }) => message).join('. ')

mixin select(entity, propertyName, options, value, caption, notSelectedCaption = '', errors = [])
  -
    let error = _.get(errors, propertyName)
    let id;
    const propertyIdData = _.get(entity, propertyName, '')
    if (_.isArray(propertyIdData)) id = _.map(propertyIdData, (i) => i.id)
    else id = propertyIdData

  .form-group.mb-3(class=(errors[propertyName] && 'has-danger'))
    label(for=propertyName).form-label= t(getTKey(entity, propertyName))
    select(
      name=getInputName(entity, propertyName)
      class='form-select'
      id=propertyName
    )&attributes(attributes)
      if (notSelectedCaption)
        option(value='')= notSelectedCaption
      for item in options
        if (_.isArray(id))
          option(value=item[value], selected= _.includes(id, item[value]))= item[caption]
        else
          option(value=item[value], selected= id == item[value])= item[caption]
    if error
      .form-control-feedback.text-danger= error.map(({ message }) => message).join('. ')

mixin submit(form = null)
  .form-group
    input(class='btn btn-primary w-100' type='submit')&attributes(attributes)

mixin buttonTo(action, method)
  form(action=action, method="post")
    input(name="_method" type="hidden" value=method)
    input(type='submit')&attributes(attributes)
